name: Deploy to VM

on:
    push:
        branches:
            - deployment

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.5.3
              with:
                  ssh-private-key: ${{ secrets.VM_SSH_PRIVATE_KEY }}

            - name: Copy deployment scripts
              run: |
                  scp -o StrictHostKeyChecking=no .github/workflows/scripts/dockerize-frontend.sh ubuntu@141.148.202.130:/tmp/
                  scp -o StrictHostKeyChecking=no .github/workflows/scripts/dockerize-backend.sh ubuntu@141.148.202.130:/tmp/

            - name: Run frontend deployment script
              run: |
                  ssh -o StrictHostKeyChecking=no ubuntu@141.148.202.130 "chmod +x /tmp/dockerize-frontend.sh && /tmp/dockerize-frontend.sh"

            - name: Build and run backend Docker container
              run: |
                  echo "Building and running backend Docker container..."
                  ssh -o StrictHostKeyChecking=no ubuntu@141.148.202.130 << 'EOF'
                  cd /var/www/taskmanager-backend
                  docker build -t backend:latest .
                  docker stop backend || true
                  docker rm backend || true
                  export PORT=${{secrets.PORT}}
                  export FRONTEND_ENDPOINT=${{secrets.FRONTEND_ENDPOINT}}
                  export BACKEND_ENDPOINT=${{secrets.BACKEND_ENDPOINT}}
                  export PUBLIC_STORAGE=${{secrets.PUBLIC_STORAGE}}
                  export MONGO_DB_URI=${{secrets.MONGO_DB_URI}}
                  export DB_NAME=${{secrets.DB_NAME}}
                  export EMAIL_USERNAME=${{secrets.EMAIL_USERNAME}}
                  export EMAIL_PASSWORD=${{secrets.EMAIL_PASSWORD}}
                  export CORS_ORIGINS=${{secrets.CORS_ORIGINS}}

                  docker run -d --no-cache --restart unless-stopped --name backend -p 8000:8000 \
                      -e PORT=$PORT \
                      -e FRONTEND_ENDPOINT=$FRONTEND_ENDPOINT \
                      -e BACKEND_ENDPOINT=$BACKNEND_ENDPOINT \
                      -e PUBLIC_STORAGE=$PUBLIC_STORAGE \
                      -e MONGO_DB_URI=$MONGO_DB_URI \
                      -e DB_NAME=$DB_NAME \
                      -e EMAIL_USERNAME=$EMAIL_USERNAME \
                      -e EMAIL_PASSWORD=$EMAIL_PASSWORD \
                      -e CORS_ORIGINS=$CORS_ORIGINS \
                      backend:latest
                      
                  EOF

# TODO => can we use .env file or something similar instead of passing all variables manually?
